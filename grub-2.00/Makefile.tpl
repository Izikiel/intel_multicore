[+ AutoGen5 template +]

[+ DEFINE get_emu_sources +][+ IF emu +][+ FOR emu +][+ .emu +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_nodist_sources +][+ IF emu_nodist +][+ FOR emu_nodist +][+ .emu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_startup +][+ IF emu_startup +][+ FOR emu_startup +][+ .emu_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_cflags +][+ IF emu_cflags +][+ FOR emu_cflags +][+ .emu_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_ldadd +][+ IF emu_ldadd +][+ FOR emu_ldadd +][+ .emu_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_ldflags +][+ IF emu_ldflags +][+ FOR emu_ldflags +][+ .emu_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_cppflags +][+ IF emu_cppflags +][+ FOR emu_cppflags +][+ .emu_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_ccasflags +][+ IF emu_ccasflags +][+ FOR emu_ccasflags +][+ .emu_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_stripflags +][+ IF emu_stripflags +][+ FOR emu_stripflags +][+ .emu_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_emu_objcopyflags +][+ IF emu_objcopyflags +][+ FOR emu_objcopyflags +][+ .emu_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_emu_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_emu_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_sources +][+ IF i386_pc +][+ FOR i386_pc +][+ .i386_pc +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_nodist_sources +][+ IF i386_pc_nodist +][+ FOR i386_pc_nodist +][+ .i386_pc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_startup +][+ IF i386_pc_startup +][+ FOR i386_pc_startup +][+ .i386_pc_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_cflags +][+ IF i386_pc_cflags +][+ FOR i386_pc_cflags +][+ .i386_pc_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_ldadd +][+ IF i386_pc_ldadd +][+ FOR i386_pc_ldadd +][+ .i386_pc_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_ldflags +][+ IF i386_pc_ldflags +][+ FOR i386_pc_ldflags +][+ .i386_pc_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_cppflags +][+ IF i386_pc_cppflags +][+ FOR i386_pc_cppflags +][+ .i386_pc_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_ccasflags +][+ IF i386_pc_ccasflags +][+ FOR i386_pc_ccasflags +][+ .i386_pc_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_stripflags +][+ IF i386_pc_stripflags +][+ FOR i386_pc_stripflags +][+ .i386_pc_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_pc_objcopyflags +][+ IF i386_pc_objcopyflags +][+ FOR i386_pc_objcopyflags +][+ .i386_pc_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_pc_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_pc_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_sources +][+ IF i386_efi +][+ FOR i386_efi +][+ .i386_efi +] [+ ENDFOR +][+ ENDIF +][+ IF efi +][+ FOR efi +][+ .efi +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_nodist_sources +][+ IF i386_efi_nodist +][+ FOR i386_efi_nodist +][+ .i386_efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF efi_nodist +][+ FOR efi_nodist +][+ .efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_startup +][+ IF i386_efi_startup +][+ FOR i386_efi_startup +][+ .i386_efi_startup +] [+ ENDFOR +][+ ELIF efi_startup +][+ FOR efi_startup +][+ .efi_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_cflags +][+ IF i386_efi_cflags +][+ FOR i386_efi_cflags +][+ .i386_efi_cflags +] [+ ENDFOR +][+ ELIF efi_cflags +][+ FOR efi_cflags +][+ .efi_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_ldadd +][+ IF i386_efi_ldadd +][+ FOR i386_efi_ldadd +][+ .i386_efi_ldadd +] [+ ENDFOR +][+ ELIF efi_ldadd +][+ FOR efi_ldadd +][+ .efi_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_ldflags +][+ IF i386_efi_ldflags +][+ FOR i386_efi_ldflags +][+ .i386_efi_ldflags +] [+ ENDFOR +][+ ELIF efi_ldflags +][+ FOR efi_ldflags +][+ .efi_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_cppflags +][+ IF i386_efi_cppflags +][+ FOR i386_efi_cppflags +][+ .i386_efi_cppflags +] [+ ENDFOR +][+ ELIF efi_cppflags +][+ FOR efi_cppflags +][+ .efi_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_ccasflags +][+ IF i386_efi_ccasflags +][+ FOR i386_efi_ccasflags +][+ .i386_efi_ccasflags +] [+ ENDFOR +][+ ELIF efi_ccasflags +][+ FOR efi_ccasflags +][+ .efi_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_stripflags +][+ IF i386_efi_stripflags +][+ FOR i386_efi_stripflags +][+ .i386_efi_stripflags +] [+ ENDFOR +][+ ELIF efi_stripflags +][+ FOR efi_stripflags +][+ .efi_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_efi_objcopyflags +][+ IF i386_efi_objcopyflags +][+ FOR i386_efi_objcopyflags +][+ .i386_efi_objcopyflags +] [+ ENDFOR +][+ ELIF efi_objcopyflags +][+ FOR efi_objcopyflags +][+ .efi_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_sources +][+ IF i386_qemu +][+ FOR i386_qemu +][+ .i386_qemu +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu +][+ FOR i386_coreboot_multiboot_qemu +][+ .i386_coreboot_multiboot_qemu +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_nodist_sources +][+ IF i386_qemu_nodist +][+ FOR i386_qemu_nodist +][+ .i386_qemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu_nodist +][+ FOR i386_coreboot_multiboot_qemu_nodist +][+ .i386_coreboot_multiboot_qemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_startup +][+ IF i386_qemu_startup +][+ FOR i386_qemu_startup +][+ .i386_qemu_startup +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_startup +][+ FOR i386_coreboot_multiboot_qemu_startup +][+ .i386_coreboot_multiboot_qemu_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_cflags +][+ IF i386_qemu_cflags +][+ FOR i386_qemu_cflags +][+ .i386_qemu_cflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cflags +][+ FOR i386_coreboot_multiboot_qemu_cflags +][+ .i386_coreboot_multiboot_qemu_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_ldadd +][+ IF i386_qemu_ldadd +][+ FOR i386_qemu_ldadd +][+ .i386_qemu_ldadd +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldadd +][+ FOR i386_coreboot_multiboot_qemu_ldadd +][+ .i386_coreboot_multiboot_qemu_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_ldflags +][+ IF i386_qemu_ldflags +][+ FOR i386_qemu_ldflags +][+ .i386_qemu_ldflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldflags +][+ FOR i386_coreboot_multiboot_qemu_ldflags +][+ .i386_coreboot_multiboot_qemu_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_cppflags +][+ IF i386_qemu_cppflags +][+ FOR i386_qemu_cppflags +][+ .i386_qemu_cppflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cppflags +][+ FOR i386_coreboot_multiboot_qemu_cppflags +][+ .i386_coreboot_multiboot_qemu_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_ccasflags +][+ IF i386_qemu_ccasflags +][+ FOR i386_qemu_ccasflags +][+ .i386_qemu_ccasflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ccasflags +][+ FOR i386_coreboot_multiboot_qemu_ccasflags +][+ .i386_coreboot_multiboot_qemu_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_stripflags +][+ IF i386_qemu_stripflags +][+ FOR i386_qemu_stripflags +][+ .i386_qemu_stripflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_stripflags +][+ FOR i386_coreboot_multiboot_qemu_stripflags +][+ .i386_coreboot_multiboot_qemu_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_qemu_objcopyflags +][+ IF i386_qemu_objcopyflags +][+ FOR i386_qemu_objcopyflags +][+ .i386_qemu_objcopyflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_objcopyflags +][+ FOR i386_coreboot_multiboot_qemu_objcopyflags +][+ .i386_coreboot_multiboot_qemu_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_qemu_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_qemu_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_sources +][+ IF i386_coreboot +][+ FOR i386_coreboot +][+ .i386_coreboot +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu +][+ FOR i386_coreboot_multiboot_qemu +][+ .i386_coreboot_multiboot_qemu +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_nodist_sources +][+ IF i386_coreboot_nodist +][+ FOR i386_coreboot_nodist +][+ .i386_coreboot_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu_nodist +][+ FOR i386_coreboot_multiboot_qemu_nodist +][+ .i386_coreboot_multiboot_qemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_startup +][+ IF i386_coreboot_startup +][+ FOR i386_coreboot_startup +][+ .i386_coreboot_startup +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_startup +][+ FOR i386_coreboot_multiboot_qemu_startup +][+ .i386_coreboot_multiboot_qemu_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_cflags +][+ IF i386_coreboot_cflags +][+ FOR i386_coreboot_cflags +][+ .i386_coreboot_cflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cflags +][+ FOR i386_coreboot_multiboot_qemu_cflags +][+ .i386_coreboot_multiboot_qemu_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_ldadd +][+ IF i386_coreboot_ldadd +][+ FOR i386_coreboot_ldadd +][+ .i386_coreboot_ldadd +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldadd +][+ FOR i386_coreboot_multiboot_qemu_ldadd +][+ .i386_coreboot_multiboot_qemu_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_ldflags +][+ IF i386_coreboot_ldflags +][+ FOR i386_coreboot_ldflags +][+ .i386_coreboot_ldflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldflags +][+ FOR i386_coreboot_multiboot_qemu_ldflags +][+ .i386_coreboot_multiboot_qemu_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_cppflags +][+ IF i386_coreboot_cppflags +][+ FOR i386_coreboot_cppflags +][+ .i386_coreboot_cppflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cppflags +][+ FOR i386_coreboot_multiboot_qemu_cppflags +][+ .i386_coreboot_multiboot_qemu_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_ccasflags +][+ IF i386_coreboot_ccasflags +][+ FOR i386_coreboot_ccasflags +][+ .i386_coreboot_ccasflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ccasflags +][+ FOR i386_coreboot_multiboot_qemu_ccasflags +][+ .i386_coreboot_multiboot_qemu_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_stripflags +][+ IF i386_coreboot_stripflags +][+ FOR i386_coreboot_stripflags +][+ .i386_coreboot_stripflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_stripflags +][+ FOR i386_coreboot_multiboot_qemu_stripflags +][+ .i386_coreboot_multiboot_qemu_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_coreboot_objcopyflags +][+ IF i386_coreboot_objcopyflags +][+ FOR i386_coreboot_objcopyflags +][+ .i386_coreboot_objcopyflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_objcopyflags +][+ FOR i386_coreboot_multiboot_qemu_objcopyflags +][+ .i386_coreboot_multiboot_qemu_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_coreboot_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_coreboot_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_sources +][+ IF i386_multiboot +][+ FOR i386_multiboot +][+ .i386_multiboot +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu +][+ FOR i386_coreboot_multiboot_qemu +][+ .i386_coreboot_multiboot_qemu +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_nodist_sources +][+ IF i386_multiboot_nodist +][+ FOR i386_multiboot_nodist +][+ .i386_multiboot_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_coreboot_multiboot_qemu_nodist +][+ FOR i386_coreboot_multiboot_qemu_nodist +][+ .i386_coreboot_multiboot_qemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_startup +][+ IF i386_multiboot_startup +][+ FOR i386_multiboot_startup +][+ .i386_multiboot_startup +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_startup +][+ FOR i386_coreboot_multiboot_qemu_startup +][+ .i386_coreboot_multiboot_qemu_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_cflags +][+ IF i386_multiboot_cflags +][+ FOR i386_multiboot_cflags +][+ .i386_multiboot_cflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cflags +][+ FOR i386_coreboot_multiboot_qemu_cflags +][+ .i386_coreboot_multiboot_qemu_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_ldadd +][+ IF i386_multiboot_ldadd +][+ FOR i386_multiboot_ldadd +][+ .i386_multiboot_ldadd +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldadd +][+ FOR i386_coreboot_multiboot_qemu_ldadd +][+ .i386_coreboot_multiboot_qemu_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_ldflags +][+ IF i386_multiboot_ldflags +][+ FOR i386_multiboot_ldflags +][+ .i386_multiboot_ldflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ldflags +][+ FOR i386_coreboot_multiboot_qemu_ldflags +][+ .i386_coreboot_multiboot_qemu_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_cppflags +][+ IF i386_multiboot_cppflags +][+ FOR i386_multiboot_cppflags +][+ .i386_multiboot_cppflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_cppflags +][+ FOR i386_coreboot_multiboot_qemu_cppflags +][+ .i386_coreboot_multiboot_qemu_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_ccasflags +][+ IF i386_multiboot_ccasflags +][+ FOR i386_multiboot_ccasflags +][+ .i386_multiboot_ccasflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_ccasflags +][+ FOR i386_coreboot_multiboot_qemu_ccasflags +][+ .i386_coreboot_multiboot_qemu_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_stripflags +][+ IF i386_multiboot_stripflags +][+ FOR i386_multiboot_stripflags +][+ .i386_multiboot_stripflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_stripflags +][+ FOR i386_coreboot_multiboot_qemu_stripflags +][+ .i386_coreboot_multiboot_qemu_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_multiboot_objcopyflags +][+ IF i386_multiboot_objcopyflags +][+ FOR i386_multiboot_objcopyflags +][+ .i386_multiboot_objcopyflags +] [+ ENDFOR +][+ ELIF i386_coreboot_multiboot_qemu_objcopyflags +][+ FOR i386_coreboot_multiboot_qemu_objcopyflags +][+ .i386_coreboot_multiboot_qemu_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_multiboot_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_multiboot_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_sources +][+ IF i386_ieee1275 +][+ FOR i386_ieee1275 +][+ .i386_ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275 +][+ FOR ieee1275 +][+ .ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF i386 +][+ FOR i386 +][+ .i386 +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_nodist_sources +][+ IF i386_ieee1275_nodist +][+ FOR i386_ieee1275_nodist +][+ .i386_ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275_nodist +][+ FOR ieee1275_nodist +][+ .ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF i386_nodist +][+ FOR i386_nodist +][+ .i386_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_startup +][+ IF i386_ieee1275_startup +][+ FOR i386_ieee1275_startup +][+ .i386_ieee1275_startup +] [+ ENDFOR +][+ ELIF ieee1275_startup +][+ FOR ieee1275_startup +][+ .ieee1275_startup +] [+ ENDFOR +][+ ELIF i386_startup +][+ FOR i386_startup +][+ .i386_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_cflags +][+ IF i386_ieee1275_cflags +][+ FOR i386_ieee1275_cflags +][+ .i386_ieee1275_cflags +] [+ ENDFOR +][+ ELIF ieee1275_cflags +][+ FOR ieee1275_cflags +][+ .ieee1275_cflags +] [+ ENDFOR +][+ ELIF i386_cflags +][+ FOR i386_cflags +][+ .i386_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_ldadd +][+ IF i386_ieee1275_ldadd +][+ FOR i386_ieee1275_ldadd +][+ .i386_ieee1275_ldadd +] [+ ENDFOR +][+ ELIF ieee1275_ldadd +][+ FOR ieee1275_ldadd +][+ .ieee1275_ldadd +] [+ ENDFOR +][+ ELIF i386_ldadd +][+ FOR i386_ldadd +][+ .i386_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_ldflags +][+ IF i386_ieee1275_ldflags +][+ FOR i386_ieee1275_ldflags +][+ .i386_ieee1275_ldflags +] [+ ENDFOR +][+ ELIF ieee1275_ldflags +][+ FOR ieee1275_ldflags +][+ .ieee1275_ldflags +] [+ ENDFOR +][+ ELIF i386_ldflags +][+ FOR i386_ldflags +][+ .i386_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_cppflags +][+ IF i386_ieee1275_cppflags +][+ FOR i386_ieee1275_cppflags +][+ .i386_ieee1275_cppflags +] [+ ENDFOR +][+ ELIF ieee1275_cppflags +][+ FOR ieee1275_cppflags +][+ .ieee1275_cppflags +] [+ ENDFOR +][+ ELIF i386_cppflags +][+ FOR i386_cppflags +][+ .i386_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_ccasflags +][+ IF i386_ieee1275_ccasflags +][+ FOR i386_ieee1275_ccasflags +][+ .i386_ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF ieee1275_ccasflags +][+ FOR ieee1275_ccasflags +][+ .ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF i386_ccasflags +][+ FOR i386_ccasflags +][+ .i386_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_stripflags +][+ IF i386_ieee1275_stripflags +][+ FOR i386_ieee1275_stripflags +][+ .i386_ieee1275_stripflags +] [+ ENDFOR +][+ ELIF ieee1275_stripflags +][+ FOR ieee1275_stripflags +][+ .ieee1275_stripflags +] [+ ENDFOR +][+ ELIF i386_stripflags +][+ FOR i386_stripflags +][+ .i386_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_i386_ieee1275_objcopyflags +][+ IF i386_ieee1275_objcopyflags +][+ FOR i386_ieee1275_objcopyflags +][+ .i386_ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF ieee1275_objcopyflags +][+ FOR ieee1275_objcopyflags +][+ .ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF i386_objcopyflags +][+ FOR i386_objcopyflags +][+ .i386_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_i386_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_i386_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_sources +][+ IF x86_64_efi +][+ FOR x86_64_efi +][+ .x86_64_efi +] [+ ENDFOR +][+ ENDIF +][+ IF x86_64 +][+ FOR x86_64 +][+ .x86_64 +] [+ ENDFOR +][+ ENDIF +][+ IF efi +][+ FOR efi +][+ .efi +] [+ ENDFOR +][+ ENDIF +][+ IF x86 +][+ FOR x86 +][+ .x86 +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_nodist_sources +][+ IF x86_64_efi_nodist +][+ FOR x86_64_efi_nodist +][+ .x86_64_efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_64_nodist +][+ FOR x86_64_nodist +][+ .x86_64_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF efi_nodist +][+ FOR efi_nodist +][+ .efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF x86_nodist +][+ FOR x86_nodist +][+ .x86_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_startup +][+ IF x86_64_efi_startup +][+ FOR x86_64_efi_startup +][+ .x86_64_efi_startup +] [+ ENDFOR +][+ ELIF x86_64_startup +][+ FOR x86_64_startup +][+ .x86_64_startup +] [+ ENDFOR +][+ ELIF efi_startup +][+ FOR efi_startup +][+ .efi_startup +] [+ ENDFOR +][+ ELIF x86_startup +][+ FOR x86_startup +][+ .x86_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_cflags +][+ IF x86_64_efi_cflags +][+ FOR x86_64_efi_cflags +][+ .x86_64_efi_cflags +] [+ ENDFOR +][+ ELIF x86_64_cflags +][+ FOR x86_64_cflags +][+ .x86_64_cflags +] [+ ENDFOR +][+ ELIF efi_cflags +][+ FOR efi_cflags +][+ .efi_cflags +] [+ ENDFOR +][+ ELIF x86_cflags +][+ FOR x86_cflags +][+ .x86_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_ldadd +][+ IF x86_64_efi_ldadd +][+ FOR x86_64_efi_ldadd +][+ .x86_64_efi_ldadd +] [+ ENDFOR +][+ ELIF x86_64_ldadd +][+ FOR x86_64_ldadd +][+ .x86_64_ldadd +] [+ ENDFOR +][+ ELIF efi_ldadd +][+ FOR efi_ldadd +][+ .efi_ldadd +] [+ ENDFOR +][+ ELIF x86_ldadd +][+ FOR x86_ldadd +][+ .x86_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_ldflags +][+ IF x86_64_efi_ldflags +][+ FOR x86_64_efi_ldflags +][+ .x86_64_efi_ldflags +] [+ ENDFOR +][+ ELIF x86_64_ldflags +][+ FOR x86_64_ldflags +][+ .x86_64_ldflags +] [+ ENDFOR +][+ ELIF efi_ldflags +][+ FOR efi_ldflags +][+ .efi_ldflags +] [+ ENDFOR +][+ ELIF x86_ldflags +][+ FOR x86_ldflags +][+ .x86_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_cppflags +][+ IF x86_64_efi_cppflags +][+ FOR x86_64_efi_cppflags +][+ .x86_64_efi_cppflags +] [+ ENDFOR +][+ ELIF x86_64_cppflags +][+ FOR x86_64_cppflags +][+ .x86_64_cppflags +] [+ ENDFOR +][+ ELIF efi_cppflags +][+ FOR efi_cppflags +][+ .efi_cppflags +] [+ ENDFOR +][+ ELIF x86_cppflags +][+ FOR x86_cppflags +][+ .x86_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_ccasflags +][+ IF x86_64_efi_ccasflags +][+ FOR x86_64_efi_ccasflags +][+ .x86_64_efi_ccasflags +] [+ ENDFOR +][+ ELIF x86_64_ccasflags +][+ FOR x86_64_ccasflags +][+ .x86_64_ccasflags +] [+ ENDFOR +][+ ELIF efi_ccasflags +][+ FOR efi_ccasflags +][+ .efi_ccasflags +] [+ ENDFOR +][+ ELIF x86_ccasflags +][+ FOR x86_ccasflags +][+ .x86_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_stripflags +][+ IF x86_64_efi_stripflags +][+ FOR x86_64_efi_stripflags +][+ .x86_64_efi_stripflags +] [+ ENDFOR +][+ ELIF x86_64_stripflags +][+ FOR x86_64_stripflags +][+ .x86_64_stripflags +] [+ ENDFOR +][+ ELIF efi_stripflags +][+ FOR efi_stripflags +][+ .efi_stripflags +] [+ ENDFOR +][+ ELIF x86_stripflags +][+ FOR x86_stripflags +][+ .x86_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_x86_64_efi_objcopyflags +][+ IF x86_64_efi_objcopyflags +][+ FOR x86_64_efi_objcopyflags +][+ .x86_64_efi_objcopyflags +] [+ ENDFOR +][+ ELIF x86_64_objcopyflags +][+ FOR x86_64_objcopyflags +][+ .x86_64_objcopyflags +] [+ ENDFOR +][+ ELIF efi_objcopyflags +][+ FOR efi_objcopyflags +][+ .efi_objcopyflags +] [+ ENDFOR +][+ ELIF x86_objcopyflags +][+ FOR x86_objcopyflags +][+ .x86_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_x86_64_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_x86_64_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_sources +][+ IF mips_loongson +][+ FOR mips_loongson +][+ .mips_loongson +] [+ ENDFOR +][+ ENDIF +][+ IF videoinkernel +][+ FOR videoinkernel +][+ .videoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF mips +][+ FOR mips +][+ .mips +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF usb +][+ FOR usb +][+ .usb +] [+ ENDFOR +][+ ENDIF +][+ IF pci +][+ FOR pci +][+ .pci +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_nodist_sources +][+ IF mips_loongson_nodist +][+ FOR mips_loongson_nodist +][+ .mips_loongson_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videoinkernel_nodist +][+ FOR videoinkernel_nodist +][+ .videoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF mips_nodist +][+ FOR mips_nodist +][+ .mips_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF usb_nodist +][+ FOR usb_nodist +][+ .usb_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF pci_nodist +][+ FOR pci_nodist +][+ .pci_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_startup +][+ IF mips_loongson_startup +][+ FOR mips_loongson_startup +][+ .mips_loongson_startup +] [+ ENDFOR +][+ ELIF videoinkernel_startup +][+ FOR videoinkernel_startup +][+ .videoinkernel_startup +] [+ ENDFOR +][+ ELIF mips_startup +][+ FOR mips_startup +][+ .mips_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF usb_startup +][+ FOR usb_startup +][+ .usb_startup +] [+ ENDFOR +][+ ELIF pci_startup +][+ FOR pci_startup +][+ .pci_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_cflags +][+ IF mips_loongson_cflags +][+ FOR mips_loongson_cflags +][+ .mips_loongson_cflags +] [+ ENDFOR +][+ ELIF videoinkernel_cflags +][+ FOR videoinkernel_cflags +][+ .videoinkernel_cflags +] [+ ENDFOR +][+ ELIF mips_cflags +][+ FOR mips_cflags +][+ .mips_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF usb_cflags +][+ FOR usb_cflags +][+ .usb_cflags +] [+ ENDFOR +][+ ELIF pci_cflags +][+ FOR pci_cflags +][+ .pci_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_ldadd +][+ IF mips_loongson_ldadd +][+ FOR mips_loongson_ldadd +][+ .mips_loongson_ldadd +] [+ ENDFOR +][+ ELIF videoinkernel_ldadd +][+ FOR videoinkernel_ldadd +][+ .videoinkernel_ldadd +] [+ ENDFOR +][+ ELIF mips_ldadd +][+ FOR mips_ldadd +][+ .mips_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF usb_ldadd +][+ FOR usb_ldadd +][+ .usb_ldadd +] [+ ENDFOR +][+ ELIF pci_ldadd +][+ FOR pci_ldadd +][+ .pci_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_ldflags +][+ IF mips_loongson_ldflags +][+ FOR mips_loongson_ldflags +][+ .mips_loongson_ldflags +] [+ ENDFOR +][+ ELIF videoinkernel_ldflags +][+ FOR videoinkernel_ldflags +][+ .videoinkernel_ldflags +] [+ ENDFOR +][+ ELIF mips_ldflags +][+ FOR mips_ldflags +][+ .mips_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF usb_ldflags +][+ FOR usb_ldflags +][+ .usb_ldflags +] [+ ENDFOR +][+ ELIF pci_ldflags +][+ FOR pci_ldflags +][+ .pci_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_cppflags +][+ IF mips_loongson_cppflags +][+ FOR mips_loongson_cppflags +][+ .mips_loongson_cppflags +] [+ ENDFOR +][+ ELIF videoinkernel_cppflags +][+ FOR videoinkernel_cppflags +][+ .videoinkernel_cppflags +] [+ ENDFOR +][+ ELIF mips_cppflags +][+ FOR mips_cppflags +][+ .mips_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF usb_cppflags +][+ FOR usb_cppflags +][+ .usb_cppflags +] [+ ENDFOR +][+ ELIF pci_cppflags +][+ FOR pci_cppflags +][+ .pci_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_ccasflags +][+ IF mips_loongson_ccasflags +][+ FOR mips_loongson_ccasflags +][+ .mips_loongson_ccasflags +] [+ ENDFOR +][+ ELIF videoinkernel_ccasflags +][+ FOR videoinkernel_ccasflags +][+ .videoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF mips_ccasflags +][+ FOR mips_ccasflags +][+ .mips_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF usb_ccasflags +][+ FOR usb_ccasflags +][+ .usb_ccasflags +] [+ ENDFOR +][+ ELIF pci_ccasflags +][+ FOR pci_ccasflags +][+ .pci_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_stripflags +][+ IF mips_loongson_stripflags +][+ FOR mips_loongson_stripflags +][+ .mips_loongson_stripflags +] [+ ENDFOR +][+ ELIF videoinkernel_stripflags +][+ FOR videoinkernel_stripflags +][+ .videoinkernel_stripflags +] [+ ENDFOR +][+ ELIF mips_stripflags +][+ FOR mips_stripflags +][+ .mips_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF usb_stripflags +][+ FOR usb_stripflags +][+ .usb_stripflags +] [+ ENDFOR +][+ ELIF pci_stripflags +][+ FOR pci_stripflags +][+ .pci_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_loongson_objcopyflags +][+ IF mips_loongson_objcopyflags +][+ FOR mips_loongson_objcopyflags +][+ .mips_loongson_objcopyflags +] [+ ENDFOR +][+ ELIF videoinkernel_objcopyflags +][+ FOR videoinkernel_objcopyflags +][+ .videoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF mips_objcopyflags +][+ FOR mips_objcopyflags +][+ .mips_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF usb_objcopyflags +][+ FOR usb_objcopyflags +][+ .usb_objcopyflags +] [+ ENDFOR +][+ ELIF pci_objcopyflags +][+ FOR pci_objcopyflags +][+ .pci_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_mips_loongson_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_mips_loongson_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_sources +][+ IF sparc64_ieee1275 +][+ FOR sparc64_ieee1275 +][+ .sparc64_ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF sparc64 +][+ FOR sparc64 +][+ .sparc64 +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275 +][+ FOR ieee1275 +][+ .ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_nodist_sources +][+ IF sparc64_ieee1275_nodist +][+ FOR sparc64_ieee1275_nodist +][+ .sparc64_ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF sparc64_nodist +][+ FOR sparc64_nodist +][+ .sparc64_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275_nodist +][+ FOR ieee1275_nodist +][+ .ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_startup +][+ IF sparc64_ieee1275_startup +][+ FOR sparc64_ieee1275_startup +][+ .sparc64_ieee1275_startup +] [+ ENDFOR +][+ ELIF sparc64_startup +][+ FOR sparc64_startup +][+ .sparc64_startup +] [+ ENDFOR +][+ ELIF ieee1275_startup +][+ FOR ieee1275_startup +][+ .ieee1275_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_cflags +][+ IF sparc64_ieee1275_cflags +][+ FOR sparc64_ieee1275_cflags +][+ .sparc64_ieee1275_cflags +] [+ ENDFOR +][+ ELIF sparc64_cflags +][+ FOR sparc64_cflags +][+ .sparc64_cflags +] [+ ENDFOR +][+ ELIF ieee1275_cflags +][+ FOR ieee1275_cflags +][+ .ieee1275_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_ldadd +][+ IF sparc64_ieee1275_ldadd +][+ FOR sparc64_ieee1275_ldadd +][+ .sparc64_ieee1275_ldadd +] [+ ENDFOR +][+ ELIF sparc64_ldadd +][+ FOR sparc64_ldadd +][+ .sparc64_ldadd +] [+ ENDFOR +][+ ELIF ieee1275_ldadd +][+ FOR ieee1275_ldadd +][+ .ieee1275_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_ldflags +][+ IF sparc64_ieee1275_ldflags +][+ FOR sparc64_ieee1275_ldflags +][+ .sparc64_ieee1275_ldflags +] [+ ENDFOR +][+ ELIF sparc64_ldflags +][+ FOR sparc64_ldflags +][+ .sparc64_ldflags +] [+ ENDFOR +][+ ELIF ieee1275_ldflags +][+ FOR ieee1275_ldflags +][+ .ieee1275_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_cppflags +][+ IF sparc64_ieee1275_cppflags +][+ FOR sparc64_ieee1275_cppflags +][+ .sparc64_ieee1275_cppflags +] [+ ENDFOR +][+ ELIF sparc64_cppflags +][+ FOR sparc64_cppflags +][+ .sparc64_cppflags +] [+ ENDFOR +][+ ELIF ieee1275_cppflags +][+ FOR ieee1275_cppflags +][+ .ieee1275_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_ccasflags +][+ IF sparc64_ieee1275_ccasflags +][+ FOR sparc64_ieee1275_ccasflags +][+ .sparc64_ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF sparc64_ccasflags +][+ FOR sparc64_ccasflags +][+ .sparc64_ccasflags +] [+ ENDFOR +][+ ELIF ieee1275_ccasflags +][+ FOR ieee1275_ccasflags +][+ .ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_stripflags +][+ IF sparc64_ieee1275_stripflags +][+ FOR sparc64_ieee1275_stripflags +][+ .sparc64_ieee1275_stripflags +] [+ ENDFOR +][+ ELIF sparc64_stripflags +][+ FOR sparc64_stripflags +][+ .sparc64_stripflags +] [+ ENDFOR +][+ ELIF ieee1275_stripflags +][+ FOR ieee1275_stripflags +][+ .ieee1275_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_sparc64_ieee1275_objcopyflags +][+ IF sparc64_ieee1275_objcopyflags +][+ FOR sparc64_ieee1275_objcopyflags +][+ .sparc64_ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF sparc64_objcopyflags +][+ FOR sparc64_objcopyflags +][+ .sparc64_objcopyflags +] [+ ENDFOR +][+ ELIF ieee1275_objcopyflags +][+ FOR ieee1275_objcopyflags +][+ .ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_sparc64_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_sparc64_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_sources +][+ IF powerpc_ieee1275 +][+ FOR powerpc_ieee1275 +][+ .powerpc_ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF powerpc +][+ FOR powerpc +][+ .powerpc +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275 +][+ FOR ieee1275 +][+ .ieee1275 +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_nodist_sources +][+ IF powerpc_ieee1275_nodist +][+ FOR powerpc_ieee1275_nodist +][+ .powerpc_ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF powerpc_nodist +][+ FOR powerpc_nodist +][+ .powerpc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF ieee1275_nodist +][+ FOR ieee1275_nodist +][+ .ieee1275_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_startup +][+ IF powerpc_ieee1275_startup +][+ FOR powerpc_ieee1275_startup +][+ .powerpc_ieee1275_startup +] [+ ENDFOR +][+ ELIF powerpc_startup +][+ FOR powerpc_startup +][+ .powerpc_startup +] [+ ENDFOR +][+ ELIF ieee1275_startup +][+ FOR ieee1275_startup +][+ .ieee1275_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_cflags +][+ IF powerpc_ieee1275_cflags +][+ FOR powerpc_ieee1275_cflags +][+ .powerpc_ieee1275_cflags +] [+ ENDFOR +][+ ELIF powerpc_cflags +][+ FOR powerpc_cflags +][+ .powerpc_cflags +] [+ ENDFOR +][+ ELIF ieee1275_cflags +][+ FOR ieee1275_cflags +][+ .ieee1275_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_ldadd +][+ IF powerpc_ieee1275_ldadd +][+ FOR powerpc_ieee1275_ldadd +][+ .powerpc_ieee1275_ldadd +] [+ ENDFOR +][+ ELIF powerpc_ldadd +][+ FOR powerpc_ldadd +][+ .powerpc_ldadd +] [+ ENDFOR +][+ ELIF ieee1275_ldadd +][+ FOR ieee1275_ldadd +][+ .ieee1275_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_ldflags +][+ IF powerpc_ieee1275_ldflags +][+ FOR powerpc_ieee1275_ldflags +][+ .powerpc_ieee1275_ldflags +] [+ ENDFOR +][+ ELIF powerpc_ldflags +][+ FOR powerpc_ldflags +][+ .powerpc_ldflags +] [+ ENDFOR +][+ ELIF ieee1275_ldflags +][+ FOR ieee1275_ldflags +][+ .ieee1275_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_cppflags +][+ IF powerpc_ieee1275_cppflags +][+ FOR powerpc_ieee1275_cppflags +][+ .powerpc_ieee1275_cppflags +] [+ ENDFOR +][+ ELIF powerpc_cppflags +][+ FOR powerpc_cppflags +][+ .powerpc_cppflags +] [+ ENDFOR +][+ ELIF ieee1275_cppflags +][+ FOR ieee1275_cppflags +][+ .ieee1275_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_ccasflags +][+ IF powerpc_ieee1275_ccasflags +][+ FOR powerpc_ieee1275_ccasflags +][+ .powerpc_ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF powerpc_ccasflags +][+ FOR powerpc_ccasflags +][+ .powerpc_ccasflags +] [+ ENDFOR +][+ ELIF ieee1275_ccasflags +][+ FOR ieee1275_ccasflags +][+ .ieee1275_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_stripflags +][+ IF powerpc_ieee1275_stripflags +][+ FOR powerpc_ieee1275_stripflags +][+ .powerpc_ieee1275_stripflags +] [+ ENDFOR +][+ ELIF powerpc_stripflags +][+ FOR powerpc_stripflags +][+ .powerpc_stripflags +] [+ ENDFOR +][+ ELIF ieee1275_stripflags +][+ FOR ieee1275_stripflags +][+ .ieee1275_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_powerpc_ieee1275_objcopyflags +][+ IF powerpc_ieee1275_objcopyflags +][+ FOR powerpc_ieee1275_objcopyflags +][+ .powerpc_ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF powerpc_objcopyflags +][+ FOR powerpc_objcopyflags +][+ .powerpc_objcopyflags +] [+ ENDFOR +][+ ELIF ieee1275_objcopyflags +][+ FOR ieee1275_objcopyflags +][+ .ieee1275_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_powerpc_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_powerpc_ieee1275_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_sources +][+ IF mips_arc +][+ FOR mips_arc +][+ .mips_arc +] [+ ENDFOR +][+ ENDIF +][+ IF mips +][+ FOR mips +][+ .mips +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_nodist_sources +][+ IF mips_arc_nodist +][+ FOR mips_arc_nodist +][+ .mips_arc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF mips_nodist +][+ FOR mips_nodist +][+ .mips_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_startup +][+ IF mips_arc_startup +][+ FOR mips_arc_startup +][+ .mips_arc_startup +] [+ ENDFOR +][+ ELIF mips_startup +][+ FOR mips_startup +][+ .mips_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_cflags +][+ IF mips_arc_cflags +][+ FOR mips_arc_cflags +][+ .mips_arc_cflags +] [+ ENDFOR +][+ ELIF mips_cflags +][+ FOR mips_cflags +][+ .mips_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_ldadd +][+ IF mips_arc_ldadd +][+ FOR mips_arc_ldadd +][+ .mips_arc_ldadd +] [+ ENDFOR +][+ ELIF mips_ldadd +][+ FOR mips_ldadd +][+ .mips_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_ldflags +][+ IF mips_arc_ldflags +][+ FOR mips_arc_ldflags +][+ .mips_arc_ldflags +] [+ ENDFOR +][+ ELIF mips_ldflags +][+ FOR mips_ldflags +][+ .mips_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_cppflags +][+ IF mips_arc_cppflags +][+ FOR mips_arc_cppflags +][+ .mips_arc_cppflags +] [+ ENDFOR +][+ ELIF mips_cppflags +][+ FOR mips_cppflags +][+ .mips_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_ccasflags +][+ IF mips_arc_ccasflags +][+ FOR mips_arc_ccasflags +][+ .mips_arc_ccasflags +] [+ ENDFOR +][+ ELIF mips_ccasflags +][+ FOR mips_ccasflags +][+ .mips_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_stripflags +][+ IF mips_arc_stripflags +][+ FOR mips_arc_stripflags +][+ .mips_arc_stripflags +] [+ ENDFOR +][+ ELIF mips_stripflags +][+ FOR mips_stripflags +][+ .mips_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_arc_objcopyflags +][+ IF mips_arc_objcopyflags +][+ FOR mips_arc_objcopyflags +][+ .mips_arc_objcopyflags +] [+ ENDFOR +][+ ELIF mips_objcopyflags +][+ FOR mips_objcopyflags +][+ .mips_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_mips_arc_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_mips_arc_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_sources +][+ IF ia64_efi +][+ FOR ia64_efi +][+ .ia64_efi +] [+ ENDFOR +][+ ENDIF +][+ IF efi +][+ FOR efi +][+ .efi +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule +][+ FOR terminfomodule +][+ .terminfomodule +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules +][+ FOR videomodules +][+ .videomodules +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_nodist_sources +][+ IF ia64_efi_nodist +][+ FOR ia64_efi_nodist +][+ .ia64_efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF efi_nodist +][+ FOR efi_nodist +][+ .efi_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfomodule_nodist +][+ FOR terminfomodule_nodist +][+ .terminfomodule_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videomodules_nodist +][+ FOR videomodules_nodist +][+ .videomodules_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_startup +][+ IF ia64_efi_startup +][+ FOR ia64_efi_startup +][+ .ia64_efi_startup +] [+ ENDFOR +][+ ELIF efi_startup +][+ FOR efi_startup +][+ .efi_startup +] [+ ENDFOR +][+ ELIF terminfomodule_startup +][+ FOR terminfomodule_startup +][+ .terminfomodule_startup +] [+ ENDFOR +][+ ELIF videomodules_startup +][+ FOR videomodules_startup +][+ .videomodules_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_cflags +][+ IF ia64_efi_cflags +][+ FOR ia64_efi_cflags +][+ .ia64_efi_cflags +] [+ ENDFOR +][+ ELIF efi_cflags +][+ FOR efi_cflags +][+ .efi_cflags +] [+ ENDFOR +][+ ELIF terminfomodule_cflags +][+ FOR terminfomodule_cflags +][+ .terminfomodule_cflags +] [+ ENDFOR +][+ ELIF videomodules_cflags +][+ FOR videomodules_cflags +][+ .videomodules_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_ldadd +][+ IF ia64_efi_ldadd +][+ FOR ia64_efi_ldadd +][+ .ia64_efi_ldadd +] [+ ENDFOR +][+ ELIF efi_ldadd +][+ FOR efi_ldadd +][+ .efi_ldadd +] [+ ENDFOR +][+ ELIF terminfomodule_ldadd +][+ FOR terminfomodule_ldadd +][+ .terminfomodule_ldadd +] [+ ENDFOR +][+ ELIF videomodules_ldadd +][+ FOR videomodules_ldadd +][+ .videomodules_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_ldflags +][+ IF ia64_efi_ldflags +][+ FOR ia64_efi_ldflags +][+ .ia64_efi_ldflags +] [+ ENDFOR +][+ ELIF efi_ldflags +][+ FOR efi_ldflags +][+ .efi_ldflags +] [+ ENDFOR +][+ ELIF terminfomodule_ldflags +][+ FOR terminfomodule_ldflags +][+ .terminfomodule_ldflags +] [+ ENDFOR +][+ ELIF videomodules_ldflags +][+ FOR videomodules_ldflags +][+ .videomodules_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_cppflags +][+ IF ia64_efi_cppflags +][+ FOR ia64_efi_cppflags +][+ .ia64_efi_cppflags +] [+ ENDFOR +][+ ELIF efi_cppflags +][+ FOR efi_cppflags +][+ .efi_cppflags +] [+ ENDFOR +][+ ELIF terminfomodule_cppflags +][+ FOR terminfomodule_cppflags +][+ .terminfomodule_cppflags +] [+ ENDFOR +][+ ELIF videomodules_cppflags +][+ FOR videomodules_cppflags +][+ .videomodules_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_ccasflags +][+ IF ia64_efi_ccasflags +][+ FOR ia64_efi_ccasflags +][+ .ia64_efi_ccasflags +] [+ ENDFOR +][+ ELIF efi_ccasflags +][+ FOR efi_ccasflags +][+ .efi_ccasflags +] [+ ENDFOR +][+ ELIF terminfomodule_ccasflags +][+ FOR terminfomodule_ccasflags +][+ .terminfomodule_ccasflags +] [+ ENDFOR +][+ ELIF videomodules_ccasflags +][+ FOR videomodules_ccasflags +][+ .videomodules_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_stripflags +][+ IF ia64_efi_stripflags +][+ FOR ia64_efi_stripflags +][+ .ia64_efi_stripflags +] [+ ENDFOR +][+ ELIF efi_stripflags +][+ FOR efi_stripflags +][+ .efi_stripflags +] [+ ENDFOR +][+ ELIF terminfomodule_stripflags +][+ FOR terminfomodule_stripflags +][+ .terminfomodule_stripflags +] [+ ENDFOR +][+ ELIF videomodules_stripflags +][+ FOR videomodules_stripflags +][+ .videomodules_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_ia64_efi_objcopyflags +][+ IF ia64_efi_objcopyflags +][+ FOR ia64_efi_objcopyflags +][+ .ia64_efi_objcopyflags +] [+ ENDFOR +][+ ELIF efi_objcopyflags +][+ FOR efi_objcopyflags +][+ .efi_objcopyflags +] [+ ENDFOR +][+ ELIF terminfomodule_objcopyflags +][+ FOR terminfomodule_objcopyflags +][+ .terminfomodule_objcopyflags +] [+ ENDFOR +][+ ELIF videomodules_objcopyflags +][+ FOR videomodules_objcopyflags +][+ .videomodules_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_ia64_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_ia64_efi_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_sources +][+ IF mips_qemu_mips +][+ FOR mips_qemu_mips +][+ .mips_qemu_mips +] [+ ENDFOR +][+ ENDIF +][+ IF videoinkernel +][+ FOR videoinkernel +][+ .videoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF mips +][+ FOR mips +][+ .mips +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel +][+ FOR terminfoinkernel +][+ .terminfoinkernel +] [+ ENDFOR +][+ ENDIF +][+ IF cmos +][+ FOR cmos +][+ .cmos +] [+ ENDFOR +][+ ENDIF +][+ IF nopc +][+ FOR nopc +][+ .nopc +] [+ ENDFOR +][+ ENDIF +][+ IF noemu +][+ FOR noemu +][+ .noemu +] [+ ENDFOR +][+ ENDIF +][+ IF common +][+ FOR common +][+ .common +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_nodist_sources +][+ IF mips_qemu_mips_nodist +][+ FOR mips_qemu_mips_nodist +][+ .mips_qemu_mips_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF videoinkernel_nodist +][+ FOR videoinkernel_nodist +][+ .videoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF mips_nodist +][+ FOR mips_nodist +][+ .mips_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF terminfoinkernel_nodist +][+ FOR terminfoinkernel_nodist +][+ .terminfoinkernel_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF cmos_nodist +][+ FOR cmos_nodist +][+ .cmos_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF nopc_nodist +][+ FOR nopc_nodist +][+ .nopc_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF noemu_nodist +][+ FOR noemu_nodist +][+ .noemu_nodist +] [+ ENDFOR +][+ ENDIF +][+ IF common_nodist +][+ FOR common_nodist +][+ .common_nodist +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_startup +][+ IF mips_qemu_mips_startup +][+ FOR mips_qemu_mips_startup +][+ .mips_qemu_mips_startup +] [+ ENDFOR +][+ ELIF videoinkernel_startup +][+ FOR videoinkernel_startup +][+ .videoinkernel_startup +] [+ ENDFOR +][+ ELIF mips_startup +][+ FOR mips_startup +][+ .mips_startup +] [+ ENDFOR +][+ ELIF terminfoinkernel_startup +][+ FOR terminfoinkernel_startup +][+ .terminfoinkernel_startup +] [+ ENDFOR +][+ ELIF cmos_startup +][+ FOR cmos_startup +][+ .cmos_startup +] [+ ENDFOR +][+ ELIF nopc_startup +][+ FOR nopc_startup +][+ .nopc_startup +] [+ ENDFOR +][+ ELIF noemu_startup +][+ FOR noemu_startup +][+ .noemu_startup +] [+ ENDFOR +][+ ELIF common_startup +][+ FOR common_startup +][+ .common_startup +] [+ ENDFOR +][+ ELSE +][+ FOR startup +][+ .startup +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_cflags +][+ IF mips_qemu_mips_cflags +][+ FOR mips_qemu_mips_cflags +][+ .mips_qemu_mips_cflags +] [+ ENDFOR +][+ ELIF videoinkernel_cflags +][+ FOR videoinkernel_cflags +][+ .videoinkernel_cflags +] [+ ENDFOR +][+ ELIF mips_cflags +][+ FOR mips_cflags +][+ .mips_cflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cflags +][+ FOR terminfoinkernel_cflags +][+ .terminfoinkernel_cflags +] [+ ENDFOR +][+ ELIF cmos_cflags +][+ FOR cmos_cflags +][+ .cmos_cflags +] [+ ENDFOR +][+ ELIF nopc_cflags +][+ FOR nopc_cflags +][+ .nopc_cflags +] [+ ENDFOR +][+ ELIF noemu_cflags +][+ FOR noemu_cflags +][+ .noemu_cflags +] [+ ENDFOR +][+ ELIF common_cflags +][+ FOR common_cflags +][+ .common_cflags +] [+ ENDFOR +][+ ELSE +][+ FOR cflags +][+ .cflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_ldadd +][+ IF mips_qemu_mips_ldadd +][+ FOR mips_qemu_mips_ldadd +][+ .mips_qemu_mips_ldadd +] [+ ENDFOR +][+ ELIF videoinkernel_ldadd +][+ FOR videoinkernel_ldadd +][+ .videoinkernel_ldadd +] [+ ENDFOR +][+ ELIF mips_ldadd +][+ FOR mips_ldadd +][+ .mips_ldadd +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldadd +][+ FOR terminfoinkernel_ldadd +][+ .terminfoinkernel_ldadd +] [+ ENDFOR +][+ ELIF cmos_ldadd +][+ FOR cmos_ldadd +][+ .cmos_ldadd +] [+ ENDFOR +][+ ELIF nopc_ldadd +][+ FOR nopc_ldadd +][+ .nopc_ldadd +] [+ ENDFOR +][+ ELIF noemu_ldadd +][+ FOR noemu_ldadd +][+ .noemu_ldadd +] [+ ENDFOR +][+ ELIF common_ldadd +][+ FOR common_ldadd +][+ .common_ldadd +] [+ ENDFOR +][+ ELSE +][+ FOR ldadd +][+ .ldadd +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_ldflags +][+ IF mips_qemu_mips_ldflags +][+ FOR mips_qemu_mips_ldflags +][+ .mips_qemu_mips_ldflags +] [+ ENDFOR +][+ ELIF videoinkernel_ldflags +][+ FOR videoinkernel_ldflags +][+ .videoinkernel_ldflags +] [+ ENDFOR +][+ ELIF mips_ldflags +][+ FOR mips_ldflags +][+ .mips_ldflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ldflags +][+ FOR terminfoinkernel_ldflags +][+ .terminfoinkernel_ldflags +] [+ ENDFOR +][+ ELIF cmos_ldflags +][+ FOR cmos_ldflags +][+ .cmos_ldflags +] [+ ENDFOR +][+ ELIF nopc_ldflags +][+ FOR nopc_ldflags +][+ .nopc_ldflags +] [+ ENDFOR +][+ ELIF noemu_ldflags +][+ FOR noemu_ldflags +][+ .noemu_ldflags +] [+ ENDFOR +][+ ELIF common_ldflags +][+ FOR common_ldflags +][+ .common_ldflags +] [+ ENDFOR +][+ ELSE +][+ FOR ldflags +][+ .ldflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_cppflags +][+ IF mips_qemu_mips_cppflags +][+ FOR mips_qemu_mips_cppflags +][+ .mips_qemu_mips_cppflags +] [+ ENDFOR +][+ ELIF videoinkernel_cppflags +][+ FOR videoinkernel_cppflags +][+ .videoinkernel_cppflags +] [+ ENDFOR +][+ ELIF mips_cppflags +][+ FOR mips_cppflags +][+ .mips_cppflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_cppflags +][+ FOR terminfoinkernel_cppflags +][+ .terminfoinkernel_cppflags +] [+ ENDFOR +][+ ELIF cmos_cppflags +][+ FOR cmos_cppflags +][+ .cmos_cppflags +] [+ ENDFOR +][+ ELIF nopc_cppflags +][+ FOR nopc_cppflags +][+ .nopc_cppflags +] [+ ENDFOR +][+ ELIF noemu_cppflags +][+ FOR noemu_cppflags +][+ .noemu_cppflags +] [+ ENDFOR +][+ ELIF common_cppflags +][+ FOR common_cppflags +][+ .common_cppflags +] [+ ENDFOR +][+ ELSE +][+ FOR cppflags +][+ .cppflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_ccasflags +][+ IF mips_qemu_mips_ccasflags +][+ FOR mips_qemu_mips_ccasflags +][+ .mips_qemu_mips_ccasflags +] [+ ENDFOR +][+ ELIF videoinkernel_ccasflags +][+ FOR videoinkernel_ccasflags +][+ .videoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF mips_ccasflags +][+ FOR mips_ccasflags +][+ .mips_ccasflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_ccasflags +][+ FOR terminfoinkernel_ccasflags +][+ .terminfoinkernel_ccasflags +] [+ ENDFOR +][+ ELIF cmos_ccasflags +][+ FOR cmos_ccasflags +][+ .cmos_ccasflags +] [+ ENDFOR +][+ ELIF nopc_ccasflags +][+ FOR nopc_ccasflags +][+ .nopc_ccasflags +] [+ ENDFOR +][+ ELIF noemu_ccasflags +][+ FOR noemu_ccasflags +][+ .noemu_ccasflags +] [+ ENDFOR +][+ ELIF common_ccasflags +][+ FOR common_ccasflags +][+ .common_ccasflags +] [+ ENDFOR +][+ ELSE +][+ FOR ccasflags +][+ .ccasflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_stripflags +][+ IF mips_qemu_mips_stripflags +][+ FOR mips_qemu_mips_stripflags +][+ .mips_qemu_mips_stripflags +] [+ ENDFOR +][+ ELIF videoinkernel_stripflags +][+ FOR videoinkernel_stripflags +][+ .videoinkernel_stripflags +] [+ ENDFOR +][+ ELIF mips_stripflags +][+ FOR mips_stripflags +][+ .mips_stripflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_stripflags +][+ FOR terminfoinkernel_stripflags +][+ .terminfoinkernel_stripflags +] [+ ENDFOR +][+ ELIF cmos_stripflags +][+ FOR cmos_stripflags +][+ .cmos_stripflags +] [+ ENDFOR +][+ ELIF nopc_stripflags +][+ FOR nopc_stripflags +][+ .nopc_stripflags +] [+ ENDFOR +][+ ELIF noemu_stripflags +][+ FOR noemu_stripflags +][+ .noemu_stripflags +] [+ ENDFOR +][+ ELIF common_stripflags +][+ FOR common_stripflags +][+ .common_stripflags +] [+ ENDFOR +][+ ELSE +][+ FOR stripflags +][+ .stripflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE get_mips_qemu_mips_objcopyflags +][+ IF mips_qemu_mips_objcopyflags +][+ FOR mips_qemu_mips_objcopyflags +][+ .mips_qemu_mips_objcopyflags +] [+ ENDFOR +][+ ELIF videoinkernel_objcopyflags +][+ FOR videoinkernel_objcopyflags +][+ .videoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF mips_objcopyflags +][+ FOR mips_objcopyflags +][+ .mips_objcopyflags +] [+ ENDFOR +][+ ELIF terminfoinkernel_objcopyflags +][+ FOR terminfoinkernel_objcopyflags +][+ .terminfoinkernel_objcopyflags +] [+ ENDFOR +][+ ELIF cmos_objcopyflags +][+ FOR cmos_objcopyflags +][+ .cmos_objcopyflags +] [+ ENDFOR +][+ ELIF nopc_objcopyflags +][+ FOR nopc_objcopyflags +][+ .nopc_objcopyflags +] [+ ENDFOR +][+ ELIF noemu_objcopyflags +][+ FOR noemu_objcopyflags +][+ .noemu_objcopyflags +] [+ ENDFOR +][+ ELIF common_objcopyflags +][+ FOR common_objcopyflags +][+ .common_objcopyflags +] [+ ENDFOR +][+ ELSE +][+ FOR objcopyflags +][+ .objcopyflags +] [+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE if_mips_qemu_mips_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]if [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]if [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]if [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]if [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]if [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]if [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]if [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]if [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]if [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ DEFINE endif_mips_qemu_mips_conditionals +][+ IF mips_qemu_mips_condition +][+ FOR mips_qemu_mips_condition +]endif [+ .mips_qemu_mips_condition +]
[+ ENDFOR +][+ ELIF videoinkernel_condition +][+ FOR videoinkernel_condition +]endif [+ .videoinkernel_condition +]
[+ ENDFOR +][+ ELIF mips_condition +][+ FOR mips_condition +]endif [+ .mips_condition +]
[+ ENDFOR +][+ ELIF terminfoinkernel_condition +][+ FOR terminfoinkernel_condition +]endif [+ .terminfoinkernel_condition +]
[+ ENDFOR +][+ ELIF cmos_condition +][+ FOR cmos_condition +]endif [+ .cmos_condition +]
[+ ENDFOR +][+ ELIF nopc_condition +][+ FOR nopc_condition +]endif [+ .nopc_condition +]
[+ ENDFOR +][+ ELIF noemu_condition +][+ FOR noemu_condition +]endif [+ .noemu_condition +]
[+ ENDFOR +][+ ELIF common_condition +][+ FOR common_condition +]endif [+ .common_condition +]
[+ ENDFOR +][+ ELSE +][+ FOR condition +]endif [+ .condition +]
[+ ENDFOR +][+ ENDIF +][+ ENDDEF +]

[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR module +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.module | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].module
MODULE_FILES += [+ name +].module$(EXEEXT)
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +] ## platform sources
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_MODULE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_MODULE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_MODULE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_MODULE) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
MOD_FILES += [+ name +].mod
MARKER_FILES += [+ name +].marker
CLEANFILES += [+ name +].marker

[+ name +].marker: $([+ % name `echo $cname` +]_SOURCES) $(nodist_[+ % name `echo $cname` +]_SOURCES)
	$(TARGET_CPP) -DGRUB_LST_GENERATOR $(CPPFLAGS_MARKER) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $([+ % name `echo $cname` +]_CPPFLAGS) $(CPPFLAGS) $^ > $@.new || (rm -f $@; exit 1)
	grep 'MARKER' $@.new > $@; rm -f $@.new
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR kernel +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_emu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "emu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_pc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_pc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_qemu_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_coreboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_coreboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_multiboot_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_multiboot" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386_coreboot_multiboot_qemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_i386_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "i386_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "i386" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_x86_64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "x86_64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86_64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "x86" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_loongson_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_loongson" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "usb" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "pci" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_sparc64_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "sparc64_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "sparc64" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_powerpc_ieee1275_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "powerpc_ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "powerpc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "ieee1275" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_arc_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_arc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_ia64_efi_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "ia64_efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "efi" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfomodule" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videomodules" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.exec | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].exec
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_startup +]
[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +] ## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_KERNEL) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_KERNEL) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_KERNEL) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_KERNEL) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_STRIPFLAGS  = $(AM_STRIPFLAGS) $(STRIPFLAGS_KERNEL) [+ get_mips_qemu_mips_stripflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].exec$(EXEEXT)
	[+ IF nostrip defined +][+ FOR nostrip +][+ CASE nostrip +][+ = "mips_qemu_mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "videoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "mips" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "terminfoinkernel" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "cmos" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "nopc" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "noemu" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ = "common" +]if test x$(USE_APPLE_CC_FIXES) = xyes; then      $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $< $@;    elif test ! -z '$(TARGET_OBJ2ELF)'; then      cp $< $@.bin; $(TARGET_OBJ2ELF) $@.bin && cp $@.bin $@ || (rm -f $@.bin; exit 1);    else cp $< $@; fi[+ * +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ESAC +][+ ENDFOR +][+ ELSE +]if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(STRIP) $([+ % name `echo $cname` +]) -o $@.bin $<;   $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -ed2022 -wd1106 -nu -nd $@.bin $@; else $(STRIP) $([+ % name `echo $cname` +]_STRIPFLAGS) -o $@ $<; fi[+ ENDIF +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR image +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_emu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_emu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_pc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_pc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_qemu_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_qemu_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_coreboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_coreboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_multiboot_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_multiboot_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_i386_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_i386_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_x86_64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_x86_64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_loongson_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_loongson_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_sparc64_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_sparc64_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_powerpc_ieee1275_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_powerpc_ieee1275_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_arc_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_arc_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_ia64_efi_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_ia64_efi_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s.image | sed -e 's/[^0-9A-Za-z@_]/_/g')` +]platform_PROGRAMS += [+ name +].image
[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]## platform nodist sources
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_IMAGE) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_IMAGE) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_IMAGE) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_IMAGE) [+ get_mips_qemu_mips_ccasflags +]
[+ % name `echo $cname` +]_OBJCOPYFLAGS  = $(OBJCOPYFLAGS_IMAGE) [+ get_mips_qemu_mips_objcopyflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
platform_DATA += [+ name +].img
CLEANFILES += [+ name +].img

[+ name +].img: [+ name +].image$(EXEEXT)
	if test x$(USE_APPLE_CC_FIXES) = xyes; then   $(MACHO2IMG) $< $@; else   $(OBJCOPY) $([+ % name `echo $cname` +]_OBJCOPYFLAGS) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn -R .note.gnu.gold-version $< $@; fi
	
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR library +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +][+ IF (if (not (assoc-ref seen-vars (get ".name"))) "seen") +][+ (out-suspend "v") +][+ % name `echo $cname` +]_SOURCES  = 
nodist_[+ % name `echo $cname` +]_SOURCES  = 
[+ % name `echo $cname` +]_CFLAGS  = 
[+ % name `echo $cname` +]_CPPFLAGS  = 
[+ % name `echo $cname` +]_CCASFLAGS  = 
[+ (out-resume "v") +][+ (set! seen-vars (assoc-set! seen-vars (get ".name") 0)) +][+ ENDIF +][+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]noinst_LIBRARIES += [+ name +]
[+ ENDIF +][+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES += [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_CFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CFLAGS) $(CFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_CPPFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CPPFLAGS) $(CPPFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS += [+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]$(AM_CCASFLAGS) $(CCASFLAGS_LIBRARY) [+ ENDIF +][+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ IF (if (not (assoc-ref seen-target (get ".name"))) "seen") +]CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ ENDIF +][+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR program +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_emu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_emu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_emu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_emu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_emu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_emu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_emu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_pc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_pc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_pc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_pc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_pc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_pc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_qemu_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_qemu_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_qemu_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_qemu_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_qemu_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_qemu_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_coreboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_coreboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_coreboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_coreboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_coreboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_coreboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_multiboot_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_multiboot_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_multiboot_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_multiboot_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_multiboot_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_multiboot_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_i386_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_i386_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_i386_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_i386_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_i386_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_i386_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_x86_64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_x86_64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_x86_64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_x86_64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_x86_64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_x86_64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_loongson_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_loongson_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_loongson_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_loongson_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_loongson_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_loongson_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_sparc64_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_sparc64_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_sparc64_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_sparc64_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_powerpc_ieee1275_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_powerpc_ieee1275_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_powerpc_ieee1275_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_powerpc_ieee1275_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_arc_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_arc_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_arc_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_arc_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_arc_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_arc_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_ia64_efi_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_ia64_efi_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_ia64_efi_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_ia64_efi_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_ia64_efi_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_ia64_efi_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ % name `export cname=$(echo %s | sed -e 's/[^0-9A-Za-z@_]/_/g')` +][+ IF testcase defined +]check_PROGRAMS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_PROGRAMS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +][+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_sources +]
nodist_[+ % name `echo $cname` +]_SOURCES  = [+ get_mips_qemu_mips_nodist_sources +]
[+ % name `echo $cname` +]_LDADD  = [+ get_mips_qemu_mips_ldadd +]
[+ % name `echo $cname` +]_CFLAGS  = $(AM_CFLAGS) $(CFLAGS_PROGRAM) [+ get_mips_qemu_mips_cflags +]
[+ % name `echo $cname` +]_LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS_PROGRAM) [+ get_mips_qemu_mips_ldflags +]
[+ % name `echo $cname` +]_CPPFLAGS  = $(AM_CPPFLAGS) $(CPPFLAGS_PROGRAM) [+ get_mips_qemu_mips_cppflags +]
[+ % name `echo $cname` +]_CCASFLAGS  = $(AM_CCASFLAGS) $(CCASFLAGS_PROGRAM) [+ get_mips_qemu_mips_ccasflags +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
BUILT_SOURCES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
CLEANFILES += $(nodist_[+ % name `echo $cname` +]_SOURCES)
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR script +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_emu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_pc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_qemu_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_coreboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_multiboot_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_i386_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_x86_64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_loongson_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_sparc64_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_powerpc_ieee1275_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_arc_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_ia64_efi_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +][+ IF testcase defined +]check_SCRIPTS += [+ name +]
TESTS += [+ name +]
[+ ELSE +][+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_SCRIPTS += [+ name +]
[+ IF mansection +]if COND_MAN_PAGES
man_MANS += [+ name +].[+ mansection +]

[+ name +].[+ mansection +]: [+ name +]
	chmod a+x [+ name +]
	PATH=$(builddir):$$PATH pkgdatadir=$(builddir) $(HELP2MAN) --section=[+ mansection +] -i $(top_srcdir)/docs/man/[+ name +].h2m -o $@ [+ name +]
	
CLEANFILES += [+ name +].[+ mansection +]
endif
[+ ENDIF +][+ ENDIF +]
[+ name +]: [+ get_mips_qemu_mips_sources +] $(top_builddir)/config.status
	$(top_builddir)/config.status --file=$@:$<
	chmod a+x [+ name +]
	
CLEANFILES += [+ name +]
dist_noinst_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
[+ (define seen-target '()) +][+ (define seen-vars '()) +][+ (out-push-new) +][+ FOR data +][+ IF - enable undefined +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif

if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif

if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif

if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif

if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif

if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif

if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif

if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif

if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif

if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif

if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif

if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif

if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif

if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ELSE +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "emu" +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "videomodules" +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "nopc" +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ = "common" +]
if COND_emu
[+ if_emu_conditionals +]EXTRA_DIST += [+ get_emu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_emu_sources +]
[+ endif_emu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_pc" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "i386" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "x86" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "usb" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "pci" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "cmos" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "noemu" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ = "common" +]
if COND_i386_pc
[+ if_i386_pc_conditionals +]EXTRA_DIST += [+ get_i386_pc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_pc_sources +]
[+ endif_i386_pc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "efi" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "i386" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "x86" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "usb" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "pci" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "nopc" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "noemu" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ = "common" +]
if COND_i386_efi
[+ if_i386_efi_conditionals +]EXTRA_DIST += [+ get_i386_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_efi_sources +]
[+ endif_i386_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "i386" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "x86" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "usb" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "pci" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "cmos" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "nopc" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "noemu" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ = "common" +]
if COND_i386_qemu
[+ if_i386_qemu_conditionals +]EXTRA_DIST += [+ get_i386_qemu_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_qemu_sources +]
[+ endif_i386_qemu_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_coreboot" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ = "common" +]
if COND_i386_coreboot
[+ if_i386_coreboot_conditionals +]EXTRA_DIST += [+ get_i386_coreboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_coreboot_sources +]
[+ endif_i386_coreboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_multiboot" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386_coreboot_multiboot_qemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "i386" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "x86" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "usb" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "terminfomodule" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "pci" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "cmos" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "nopc" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "noemu" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ = "common" +]
if COND_i386_multiboot
[+ if_i386_multiboot_conditionals +]EXTRA_DIST += [+ get_i386_multiboot_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_multiboot_sources +]
[+ endif_i386_multiboot_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "i386_ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "i386" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "x86" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "usb" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "pci" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_i386_ieee1275
[+ if_i386_ieee1275_conditionals +]EXTRA_DIST += [+ get_i386_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_i386_ieee1275_sources +]
[+ endif_i386_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "x86_64_efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86_64" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "efi" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "x86" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "usb" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "pci" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ = "common" +]
if COND_x86_64_efi
[+ if_x86_64_efi_conditionals +]EXTRA_DIST += [+ get_x86_64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_x86_64_efi_sources +]
[+ endif_x86_64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_loongson" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "mips" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "usb" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "pci" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "cmos" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "nopc" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "noemu" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ = "common" +]
if COND_mips_loongson
[+ if_mips_loongson_conditionals +]EXTRA_DIST += [+ get_mips_loongson_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_loongson_sources +]
[+ endif_mips_loongson_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "sparc64_ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "sparc64" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_sparc64_ieee1275
[+ if_sparc64_ieee1275_conditionals +]EXTRA_DIST += [+ get_sparc64_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_sparc64_ieee1275_sources +]
[+ endif_sparc64_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "powerpc_ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "powerpc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "ieee1275" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "cmos" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "videomodules" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "nopc" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "noemu" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ = "common" +]
if COND_powerpc_ieee1275
[+ if_powerpc_ieee1275_conditionals +]EXTRA_DIST += [+ get_powerpc_ieee1275_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_powerpc_ieee1275_sources +]
[+ endif_powerpc_ieee1275_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_arc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "mips" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "videomodules" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "nopc" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "noemu" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ = "common" +]
if COND_mips_arc
[+ if_mips_arc_conditionals +]EXTRA_DIST += [+ get_mips_arc_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_arc_sources +]
[+ endif_mips_arc_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "ia64_efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "efi" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "terminfomodule" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "videomodules" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "nopc" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "noemu" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ = "common" +]
if COND_ia64_efi
[+ if_ia64_efi_conditionals +]EXTRA_DIST += [+ get_ia64_efi_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_ia64_efi_sources +]
[+ endif_ia64_efi_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ IF enable defined +][+ FOR enable +][+ CASE enable +][+ = "mips_qemu_mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "videoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "mips" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "terminfoinkernel" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "cmos" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "nopc" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "noemu" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ = "common" +]
if COND_mips_qemu_mips
[+ if_mips_qemu_mips_conditionals +]EXTRA_DIST += [+ get_mips_qemu_mips_sources +]
EXTRA_DIST += [+ FOR extra_dist +][+ .extra_dist +] [+ ENDFOR +]
[+ IF installdir +][+ installdir +][+ ELSE +]bin[+ ENDIF +]_DATA += [+ get_mips_qemu_mips_sources +]
[+ endif_mips_qemu_mips_conditionals +]endif
[+ ESAC +][+ ENDFOR +][+ ENDIF +][+ ENDIF +][+ (set! seen-target (assoc-set! seen-target (get ".name") 0)) +][+ ENDFOR +][+ (out-pop #t) +]
