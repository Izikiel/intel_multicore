;==============================================================================
;==============================================================================

Cómo haceos los gts;

gdt:

|base15:00          | |slim15:00          |
|0000|0000|0000|0000| |1111|1111|1111|1111|

|base31:24|????|segl| | pl |type|base23:16|
|0000|0000|1100|0110| |1--1|----|0000|0000|


base = 0000.0000.0000.0000.0000.0000.0000.0000
slim = 0110.1111.1111.1111.1111

g=1 (slim es mul de 4k)
db=1 (32 bits)
l=0 (63 bits)
avl=0

p=0 (presente)
s=1 (code or data)

dpl: 0010 = data read write
	 1010 = code exec read

tabla:			dpl		type
code kernel     00      1010
data kernel 	00      0010
code user 		11      1010
data user 		11      0010
*video 			00 		0010



*video 	;con video entendemos el área de memria de la pantalla ?
; que no es lo mismo que la memoria de video al parecer
tamaño: 40x25x2 = 4000 Bytes
base:	0xB8000 = ----.1011.1000.0000.0000.0000
tamaño: 40000 = 1111.1010.0000 => -1=1111.1001.1111
g:		0
|base15:00          | |slim15:00          |
|1000|0000|0000|0000| |0000|1111|1001|1111|
|base31:24|G???|segl| | pl |type|base23:16|
|0000|0000|0100|0000| |1001|0010|0000|1011|
0x80000F9F 			
0x0040920B

video:	dD 0x80000FBF	;catedra clase 0
		dD 0x0040920B
límite: 0x00FBF 		; Por qué la diferencia ?????????? 

;==============================================================================
;==============================================================================
;cacho del código del kernel de la práctica:
;------------------------------------------------------------------------------
cargoGDT:	breakpoint
	cli
	lgdt [gdt_desc]
	mov EAX, CR0
	or EAX, 1
	mov CR0, EAX
	jmp 0x8:modo_protegido



;==============================================================================
;==============================================================================
;------------------------------------------------------------------------------
;gdt del kernel de la cátedra modificado:
;------------------------------------------------------------------------------
gdt: dQ 0x0 			;	primer entrada NULL
	 DQ 0x0 times 17	;	17 entradas nulas (del 1 al 17)
;	---------------------------------------------------------------------------
CodeK:	dD	0x0000FFFF		;code kernel
		dD	0x00C69A00

CodeU:	dD	0x0000FFFF		;code user
		dD	0x00C6FA00

DataK:	dD	0x0000FFFF		;data kernel
		dD	0x00C69200

DataU:	dD	0x0000FFFF		;data user
		dD 	0x00C6F200

Video:	dD	0x80000F9F 		;Pantalla	
		dD	0x0040920B
;------------------------------------------------------------------------------
gdt_desc:	dW $ - gdt
			dD gdt
;------------------------------------------------------------------------------
;==============================================================================
;==============================================================================


in al, 0,21
mov al, 0xff
out 21h, al
out a1, al
sti ;(ahora si :)